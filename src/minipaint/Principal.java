package minipaint;

import java.awt.Color;
import java.awt.Graphics;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 476062
 */
public class Principal extends javax.swing.JFrame {

    private float x0, x1, y0, y1;
    Color color;
    int aux = 0;
    int algoritmo = 0;
    int raio = 10;
    
    int xmin;
    int ymin;
    int xmax;
    int ymax;
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        jPanel1.setVisible(false);
        this.ymax = jPanel1.getY() + jPanel1.getHeight();
        this.xmax = jPanel1.getX() + jPanel1.getWidth();
        this.ymin = jPanel1.getY();
        this.xmin = jPanel1.getX();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDDA = new javax.swing.JToggleButton();
        btnBresenham = new javax.swing.JButton();
        btnCircunferencia = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cohen = new javax.swing.JButton();
        btnLian = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        btnDDA.setText("DDA");
        btnDDA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDDAMouseClicked(evt);
            }
        });

        btnBresenham.setText("Bresenham");
        btnBresenham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnBresenhamMousePressed(evt);
            }
        });

        btnCircunferencia.setText("CircunferÃªncia");
        btnCircunferencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCircunferenciaMousePressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setAlignmentX(0.0F);
        jPanel1.setAlignmentY(0.0F);
        jPanel1.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel1.setMinimumSize(new java.awt.Dimension(102, 102));
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );

        cohen.setText("Cohen-Sutherland");
        cohen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cohenMouseClicked(evt);
            }
        });

        btnLian.setText("Lian-Barsky");
        btnLian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLianMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnDDA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBresenham)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCircunferencia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cohen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLian))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDDA)
                    .addComponent(btnBresenham)
                    .addComponent(btnCircunferencia)
                    .addComponent(cohen)
                    .addComponent(btnLian))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        if(aux == 2){
            x1 = evt.getX();
            y1 = evt.getY();
            aux = 0;
            repaint();
        }
        if(aux == 1){
            x0 = evt.getX();
            y0 = evt.getY();
        }
        aux++;
    }//GEN-LAST:event_formMousePressed

    private void btnDDAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDDAMouseClicked
        // TODO add your handling code here:
        aux = 1;
        algoritmo = 1;
        btnDDA.setSelected(false);
        jPanel1.setVisible(false);
    }//GEN-LAST:event_btnDDAMouseClicked

    private void btnCircunferenciaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCircunferenciaMousePressed
        // TODO add your handling code here:
        aux = 1;
        algoritmo = 3;
        jPanel1.setVisible(false);
    }//GEN-LAST:event_btnCircunferenciaMousePressed

    private void btnBresenhamMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBresenhamMousePressed
        // TODO add your handling code here:
        algoritmo = 1;
        jPanel1.setVisible(false);
    }//GEN-LAST:event_btnBresenhamMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_formMouseReleased

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseEntered

    private void cohenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cohenMouseClicked
        // TODO add your handling code here:
        aux = 1;
        algoritmo = 4;
        jPanel1.setVisible(true);
    }//GEN-LAST:event_cohenMouseClicked

    private void btnLianMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLianMouseClicked
        // TODO add your handling code here:
        aux = 1;
        algoritmo = 5;
        jPanel1.setVisible(true);
    }//GEN-LAST:event_btnLianMouseClicked

    @Override
    public void repaint(long time, int x, int y, int width, int height) {
        super.repaint(time, x, y, width, height); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g); //To change body of generated methods, choose Tools | Templates.
        g.setColor(color.red);
        if(algoritmo == 1){ // DDA
            dda(x0,y0,x1,y1, g);
        }
        if(algoritmo == 2){  //Breseham
            breseham((int)x0, (int)y0, (int)x1, (int)y1, g);
        }
        if(algoritmo == 3){  // Circunferencia
            circunferencia((int)x0, (int)y0, g);
        }
        if(algoritmo == 4){
            cohenSutherland(g);
        }
        if(algoritmo == 5){
            lianBarsky(x0, y0, x1, y1, g);
        }
    }
    
    public void dda(float x1, float y1, float x2, float y2, Graphics g){
        float dx = x2 - x1;
        float dy = y2 - y1;
        float x = x1;
        float y = y1;
        float passos;
        g.drawLine((int)x, (int)y, (int)x, (int)y);
        if(Math.abs(dx) > Math.abs(dy))
        {
            passos = Math.abs(dx);
        }
        else{
            passos = Math.abs(dy);
        }
        double xincr = dx/passos;
        double yincr = dy/passos;

        for(int i = 1; i <= passos; i++){
            x += xincr;
            y += yincr;
            g.drawLine((int)Math.round(x),(int)Math.round(y),(int)Math.round(x),(int)Math.round(y));
        }
    }
    
    public void breseham(int x1, int y1, int x2, int y2, Graphics g){
        int x = x1;
        int y = y2;
        g.drawLine(x, y, x, y);
        int dx = (x2 - x1);
        int dy = (y2 - y1);
        int xincr, yincr;
        int p, const1, const2;

        if(dx < 0){
            dx = -dx;
            xincr = -1;
        }
        else
            xincr = 1;
        if(dy < 0){
            dy = -dy;
            yincr = -1;
        }
        else
            yincr = 1;

        if(dx > dy){
            p = 2 * dy - dx;
            const1 = 2 * dy;
            const2 = 2 * (dy - dx);
            for(int i = 0; i < dx; i++){
                if(p < 0) p += const1;
                else{
                    p += const2;
                    y += yincr;
                }
                x += xincr;
                g.drawLine(x, y, x, y);
            }
        }else{
            p = 2 * dx - dy;
            const1 = 2 * dx;
            const2 = 2 * (dx - dy);
            for(int i = 0; i < dy; i++){
                if(p < 0) p += const1;
                else{
                    p += const2;
                    x += xincr;
                }

                y += yincr;
                g.drawLine(x, y, x, y);
            }
        }
    }
    
    public void circunferencia(int x1, int y1, Graphics g){
        raio = distancia();
        int x = 0;
        int y = raio;
        plotaSimetricos(g,x,y,x1,y1);
        int p = 3 - 2 * raio;
        while(x < y){
            if(p < 0)
                p += (4 * x) + 6;
            else{
                p += 4 *(x - y) + 10;
                y --;
            }
            x++;

            plotaSimetricos(g,x,y,x1,y1);
        }
    }
    
    public void cohenSutherland(Graphics g){
        float xesq = x0, yesq = y0, xdir = x1, ydir = y1;

        boolean aceite = false;
        boolean feito = false;

        int c1;
        int c2;

        int cfora;

        float xint = 0,yint = 0;

        while(!feito){
            c1 = obtemCodigo(xesq, yesq);
            c2 = obtemCodigo(xdir, ydir);
            if(c1 == 0 && c2 ==0){
                aceite = true;
                feito = true;
            }
            else if((c1 & c2) != 0){
                feito = true;
            }
            else{
                if(c1 != 0)
                    cfora = c1;
                else
                    cfora = c2;

                if(getBit(cfora,0) == 1){
                    xint = xmin;
                    yint = y0 + (y1 - y0) * (xmin - x0)/(x1 - x0);
                }
                else if(getBit(cfora,1) == 1){
                    xint = xmax;
                    yint = y0 + (y1 - y0) * (xmax - x0)/(x1 - x0);
                }
                else if(getBit(cfora,2) == 1){
                    yint = ymin;
                    xint = x0 + (x1 - x0) * (ymin - y0)/(y1 - y0);
                }
                else if(getBit(cfora,3) == 1){
                    yint = ymax;
                    xint = x0 + (x1 - x0) * ((ymax) - y0)/(y1 - y0);
                }
                if(c1 == cfora){
                    xesq = xint;
                    yesq = yint;
                }
                else{
                    xdir = xint;
                    ydir = yint;
                }
            }
        }

        if(aceite)
            dda(xesq, yesq, xdir, ydir, g);
    }
    
    public void lianBarsky(float x1, float y1, float x2, float y2, Graphics g){
        float u[] = new float[2];
        float dx = x2 - x1, dy = y2 -y1;
        
        u[0] = 0;
        u[1] = 1;
        
        if(cliptest(-dx, x1 - xmin, u)){
            if(cliptest(dx, xmax - x1, u)){
                if(cliptest(-dy, y1 - ymin, u)){
                    if(cliptest(dy, ymax - y1, u)){
                        if(u[1] < 1){
                            x2 = x1 + dx * u[1];
                            y2 = y1 +dy * u[1];
                        }
                        if(u[0] > 0){
                            x1 = x1 + dx * u[0];
                            y1 = y1 + dy * u[0];
                        }
                        
                        dda(x1,y1,x2,y2,g);
                    }
                }
            }
        }
    }
    
    boolean cliptest(float p, float q, float[] u){
        boolean result = true;
        float r;
        if(p < 0){
            r = q/p;
            if(r > u[1]){
                result = false;
            }
            else if(r > u[0]){
               u[0] = r; 
            }
        }else if(p > 0){
            r = q/p;
            if(r < u[0]){
                result = false;
            }
            else if(r < u[1]){
                u[1] = r;
            }
        }else if(q < 0){
            result = false;
        }
        
        return result;
    }
    
    int obtemCodigo(float x, float y){
        int codigo = 0;
        
        if(x < xmin) codigo ++;
        if(x > xmax) codigo += 2;
        if(y < ymin) codigo += 4;
        if(y > ymax) codigo += 8;
        
        return codigo;
    }
        
    int getBit(int n, int k) {
        return (n >> k) & 1;
    }
    
    public void plotaSimetricos(Graphics g, int a, int b, float xc, float yc){
        g.drawRect((int)xc + a, (int)yc + b, 0, 0);
        g.drawRect((int)xc + a, (int)yc - b, 0, 0);
        g.drawRect((int)xc - a, (int)yc + b, 0, 0);
        g.drawRect((int)xc - a, (int)yc - b, 0, 0);
        g.drawRect((int)xc + b, (int)yc + a, 0, 0);
        g.drawRect((int)xc + b, (int)yc - a, 0, 0);
        g.drawRect((int)xc - b, (int)yc + a, 0, 0);
        g.drawRect((int)xc - b, (int)yc - a, 0, 0);
    }

    public int distancia(){
        double distancia = Math.sqrt(Math.pow((x1-x0),2) + (Math.pow((y1-y0),2)));
        return (int)distancia;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBresenham;
    private javax.swing.JButton btnCircunferencia;
    private javax.swing.JToggleButton btnDDA;
    private javax.swing.JButton btnLian;
    private javax.swing.JButton cohen;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
